name: Sync Project Issues

on:
  issues:
    types: [opened]

jobs:
  check_duplicate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Check for duplicate issues
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          jq --raw-output '.issue.title' "$GITHUB_EVENT_PATH"
          title=$(jq --raw-output '.issue.title | sub("^\\[[^\\]]+\\]: "; "")' "$GITHUB_EVENT_PATH")
          echo "Modified title: $title"
          duplicate=$(gh issue list --state=all --search="$title" | jq -r --arg title "$title" '.[] | select(.title | contains($title)) | .title // empty')
          if [[ -n "$duplicate" ]]; then
            echo "An issue with the same title already exists with title: $duplicate"
            gh issue add-label ${GITHUB_EVENT_NUMBER} duplicate
            gh issue close ${GITHUB_EVENT_NUMBER}
            exit 1
          else
            echo "No duplicate issues found, proceeding with sync"
            exit 0
          fi
  sync_issues:
    runs-on: ubuntu-latest
    needs: check_duplicate
    steps:
      - name: Checkout Public Repo
        uses: actions/checkout@v2
        with:
          repository: ALCHElVlY/diabloii-market
      
      - name: Checkout Private Repo
        uses: actions/checkout@v2
        with:
          repository: ALCHElVlY/DiabloIIMarket-source
          token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}

      - name: Create Issue in Private Repo
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          issue_title=$(echo "${{ github.event.issue.title }}")
          issue_body=$(echo "${{ github.event.issue.body }}")
          label=$(echo "${{ github.event.issue.labels[0].name }}")
          gh issue create -t "${issue_title}" -b "${issue_body}" -l "${label}" -R https://github.com/ALCHElVlY/DiabloIIMarket-source
